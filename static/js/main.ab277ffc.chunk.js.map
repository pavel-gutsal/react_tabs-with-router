{"version":3,"sources":["navbar/NavBar.tsx","HomePage/HomePage.tsx","TabsPage/TabsPage.tsx","PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","HomePage","TabsPage","tabs","useState","selectedTab","setSelectedTab","tabId","useParams","useEffect","foundTab","find","el","id","split","map","content","PageNotFound","title","App","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAS,WACpB,OACE,qCACE,qBAAKC,UAAU,2CAA2C,UAAQ,MAAlE,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAMA,UAAU,uBAAuBC,GAAG,IAA1C,kBAGA,cAAC,IAAD,CAAMD,UAAU,uBAAuBC,GAAG,QAA1C,yBAMN,qBAAKD,UAAU,UAAf,SACE,cAAC,IAAD,UClBKE,EAAW,WACtB,OACE,qBAAKF,UAAU,WAAf,SACE,oBAAIA,UAAU,QAAd,0B,cCKOG,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,EAAsCC,mBAAqB,MAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACQC,EAAUC,cAAVD,MAUR,OARAE,qBAAU,WACR,IAAMC,EAAWP,EAAKQ,MAAK,SAAAC,GAAE,OAAIA,EAAGC,GAAGC,MAAM,KAAK,KAAOP,KAErDG,GACFJ,EAAeI,KAEhB,CAACH,IAGF,sBAAKR,UAAU,WAAf,UAEIM,EAEI,oBAAIN,UAAU,QAAd,6BAAoCM,EAAYQ,GAAGC,MAAM,KAAK,MAE9D,oBAAIf,UAAU,QAAd,wBAGN,qBAAKA,UAAU,gBAAf,SACE,6BAEII,EAAKY,KAAI,SAAAH,GACP,IAAMC,EAAKD,EAAGC,GAAGC,MAAM,KAAK,GAE5B,OACE,oBACE,UAAQ,MACRf,UAAWQ,IAAUM,EAAK,YAAc,GAF1C,SAKE,cAAC,IAAD,CAAMd,UAAU,OAAOC,GAAE,gBAAWa,GAApC,uBACUA,MAHLA,UAYfR,EAEI,qBAAKN,UAAU,QAAQ,UAAQ,cAA/B,SACGM,EAAYW,UAGf,qBAAKjB,UAAU,QAAQ,UAAQ,cAA/B,qCC1DCkB,EAAe,WAC1B,OACE,qBAAKlB,UAAU,WAAf,SACE,oBAAIA,UAAU,QAAd,+BCKAI,EAAO,CACX,CAAEU,GAAI,QAASK,MAAO,QAASF,QAAS,eACxC,CAAEH,GAAI,QAASK,MAAO,QAASF,QAAS,eACxC,CAAEH,GAAI,QAASK,MAAO,QAASF,QAAS,gBAoC3BG,EAjCH,WACV,OACE,mCAEE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CACEE,OAAK,EACLD,QACE,cAAC,EAAD,CACElB,KAAMA,MAIZ,cAAC,IAAD,CACEiB,KAAK,SACLC,QACE,cAAC,EAAD,CACElB,KAAMA,SAKd,cAAC,IAAD,CAAOiB,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUrB,GAAG,IAAIuB,SAAO,MACrD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,cCpCnCG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ab277ffc.chunk.js","sourcesContent":["import { Outlet, Link } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <>\n      <nav className=\"navbar is-fixed-top has-background-light\" data-cy=\"nav\">\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <Link className=\"navbar-item isActive\" to=\"/\">\n              Home\n            </Link>\n            <Link className=\"navbar-item isActive\" to=\"/tabs\">\n              Tabs\n            </Link>\n          </div>\n        </div>\n      </nav>\n      <div className=\"section\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"title\">Home page</h1>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const [selectedTab, setSelectedTab] = useState<null | Tab>(null);\n  const { tabId } = useParams();\n\n  useEffect(() => {\n    const foundTab = tabs.find(el => el.id.split('-')[1] === tabId);\n\n    if (foundTab) {\n      setSelectedTab(foundTab);\n    }\n  }, [tabId]);\n\n  return (\n    <div className=\"TabsPage\">\n      {\n        selectedTab\n          ? (\n            <h1 className=\"title\">{`Tabs page ${selectedTab.id.split('-')[1]}`}</h1>\n          ) : (\n            <h1 className=\"title\">Select tab</h1>\n          )\n      }\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(el => {\n              const id = el.id.split('-')[1];\n\n              return (\n                <li\n                  data-cy=\"tab\"\n                  className={tabId === id ? 'is-active' : ''}\n                  key={id}\n                >\n                  <Link className=\"link\" to={`/tabs/${id}`}>\n                    {`Tab ${id}`}\n                  </Link>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n      {\n        selectedTab\n          ? (\n            <div className=\"block\" data-cy=\"tab-content\">\n              {selectedTab.content}\n            </div>\n          ) : (\n            <div className=\"block\" data-cy=\"tab-content\">\n              Please select a tab\n            </div>\n          )\n      }\n    </div>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <div className=\"HomePage\">\n      <h1 className=\"title\">Page Not Found</h1>\n    </div>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { NavBar } from './navbar/NavBar';\nimport { HomePage } from './HomePage/HomePage';\nimport { TabsPage } from './TabsPage/TabsPage';\nimport { PageNotFound } from './PageNotFound/PageNotFound';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => {\n  return (\n    <>\n      {/* <html class=\"has-navbar-fixed-top\"/> */}\n      <Routes>\n        <Route path=\"/\" element={<NavBar />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"tabs\">\n            <Route\n              index\n              element={(\n                <TabsPage\n                  tabs={tabs}\n                />\n              )}\n            />\n            <Route\n              path=\":tabId\"\n              element={(\n                <TabsPage\n                  tabs={tabs}\n                />\n              )}\n            />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Route>\n      </Routes>\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}